package vboxService;
# Generated by SOAP::Lite (v0.710.08) for Perl -- soaplite.com
# Copyright (C) 2000-2006 Paul Kulchenko, Byrne Reese
# -- generated at [Wed Jun  2 16:41:17 2010]
# -- generated from file:///home/vbox/tinderbox/sdk/out/linux.amd64/release/bin/sdk/bindings/webservice/vboxwebService.wsdl
my %methods = (
IVirtualBox_getExtraData => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'key', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getExtraData
IStorageController_getBus => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getBus
IMachine_queryLogFilename => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'idx', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_queryLogFilename
ISystemProperties_getNetworkAdapterCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getNetworkAdapterCount
IMedium_setType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:MediumType', attr => {}),
    ], # end parameters
  }, # end IMedium_setType
IMachine_getName => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getName
IProgress_getTimeout => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getTimeout
IVRDPServer_getNetAddress => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDPServer_getNetAddress
IMedium_getState => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getState
ISnapshot_getChildren => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_getChildren
ISystemProperties_getFreeDiskSpacePercentError => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getFreeDiskSpacePercentError
IMachine_getOSTypeId => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getOSTypeId
ISystemProperties_getMaxGuestMonitors => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxGuestMonitors
IMachine_setCurrentSnapshot => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setCurrentSnapshot
IMachine_getCPUIDLeaf => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_getCPUIDLeaf
ISerialPort_setServer => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'server', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end ISerialPort_setServer
ISnapshot_setName => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_setName
IMedium_resize => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'logicalSize', type => 'xsd:unsignedLong', attr => {}),
    ], # end parameters
  }, # end IMedium_resize
IStorageController_getMaxPortCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getMaxPortCount
IMachine_getHWVirtExProperty => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'property', type => 'vbox:HWVirtExPropertyType', attr => {}),
    ], # end parameters
  }, # end IMachine_getHWVirtExProperty
IVirtualBox_getDVDImage => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getDVDImage
IVirtualBox_openFloppyImage => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'location', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_openFloppyImage
IMachine_enumerateGuestProperties => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'patterns', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_enumerateGuestProperties
IMachine_getLogFolder => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getLogFolder
ISystemProperties_getMinGuestVRAM => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMinGuestVRAM
IHostNetworkInterface_getStatus => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getStatus
INetworkAdapter_attachToInternalNetwork => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_attachToInternalNetwork
INATEngine_setHostIP => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostIP', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_setHostIP
INATEngine_getDnsPassDomain => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getDnsPassDomain
IProgress_getResultCode => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getResultCode
IMachine_getStateFilePath => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getStateFilePath
IProgress_setCurrentOperationProgress => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'percent', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IProgress_setCurrentOperationProgress
IMedium_reset => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_reset
IGuest_getAdditionsVersion => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getAdditionsVersion
IMachine_getSettingsFilePath => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getSettingsFilePath
INetworkAdapter_setLineSpeed => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'lineSpeed', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setLineSpeed
INetworkAdapter_setAdapterType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'adapterType', type => 'vbox:NetworkAdapterType', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setAdapterType
IConsole_takeSnapshot => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'description', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_takeSnapshot
IMachine_querySavedScreenshotPNGSize => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_querySavedScreenshotPNGSize
IVRDPServer_getReuseSingleConnection => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDPServer_getReuseSingleConnection
IUSBController_getProxyAvailable => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBController_getProxyAvailable
IMachine_getStorageControllerByName => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getStorageControllerByName
IConsole_getRemoteUSBDevices => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getRemoteUSBDevices
INetworkAdapter_setTraceEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'traceEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setTraceEnabled
IProgress_getCompleted => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getCompleted
INATEngine_getTftpBootFile => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getTftpBootFile
IAppliance_importMachines => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_importMachines
IVRDPServer_getAuthType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDPServer_getAuthType
IVirtualBoxErrorInfo_getComponent => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBoxErrorInfo_getComponent
IMachine_discardSettings => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_discardSettings
IHost_getProcessorFeature => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'feature', type => 'vbox:ProcessorFeature', attr => {}),
    ], # end parameters
  }, # end IHost_getProcessorFeature
INATEngine_getDnsUseHostResolver => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getDnsUseHostResolver
IParallelPort_setPath => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IParallelPort_setPath
IMouse_getAbsoluteSupported => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMouse_getAbsoluteSupported
IMedium_getProperties => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'names', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getProperties
IHost_findHostNetworkInterfaceByName => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_findHostNetworkInterfaceByName
INetworkAdapter_detach => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_detach
IVirtualBox_getDHCPServers => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getDHCPServers
ISystemProperties_setFreeDiskSpaceError => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'freeDiskSpaceError', type => 'xsd:unsignedLong', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setFreeDiskSpaceError
IKeyboard_putCAD => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IKeyboard_putCAD
IMachine_getKeyboardHidType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getKeyboardHidType
IMachine_getParallelPort => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'slot', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_getParallelPort
IHost_getAcceleration3DAvailable => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getAcceleration3DAvailable
IMachine_setPointingHidType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'pointingHidType', type => 'vbox:PointingHidType', attr => {}),
    ], # end parameters
  }, # end IMachine_setPointingHidType
IUSBController_setEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IUSBController_setEnabled
IMachine_getSnapshotCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getSnapshotCount
IVFSExplorer_cdUp => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVFSExplorer_cdUp
IMouse_getRelativeSupported => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMouse_getRelativeSupported
INATEngine_setDnsPassDomain => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'dnsPassDomain', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end INATEngine_setDnsPassDomain
IMachine_createSharedFolder => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostPath', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'writable', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_createSharedFolder
ISession_close => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISession_close
IMachine_setCPUIDLeaf => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'valEax', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'valEbx', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'valEcx', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'valEdx', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setCPUIDLeaf
IVRDPServer_setAuthType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'authType', type => 'vbox:VRDPAuthType', attr => {}),
    ], # end parameters
  }, # end IVRDPServer_setAuthType
ISerialPort_setIRQ => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IRQ', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end ISerialPort_setIRQ
IMachine_getSessionType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getSessionType
IBIOSSettings_setLogoFadeOut => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'logoFadeOut', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setLogoFadeOut
IVirtualBox_createHardDisk => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'location', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_createHardDisk
INetworkAdapter_attachToBridgedInterface => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_attachToBridgedInterface
IGuest_getOSTypeId => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getOSTypeId
IBIOSSettings_getIOAPICEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getIOAPICEnabled
INetworkAdapter_getCableConnected => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getCableConnected
IVirtualBox_setExtraData => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'key', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_setExtraData
IVirtualBox_getSystemProperties => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getSystemProperties
IVirtualBox_createDHCPServer => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_createDHCPServer
IProgress_getOperation => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getOperation
IVirtualBox_getSettingsFilePath => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getSettingsFilePath
IBIOSSettings_getPXEDebugEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getPXEDebugEnabled
IPerformanceMetric_getMaximumValue => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceMetric_getMaximumValue
IMachine_getCPUStatus => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpu', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_getCPUStatus
IUSBController_insertDeviceFilter => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'position', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'filter', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBController_insertDeviceFilter
IMedium_getFormat => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getFormat
ISession_getState => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISession_getState
IHostNetworkInterface_getIPV6NetworkMaskPrefixLength => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getIPV6NetworkMaskPrefixLength
IHostNetworkInterface_getName => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getName
ISystemProperties_getDefaultHardDiskFolder => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getDefaultHardDiskFolder
IConsole_restoreSnapshot => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'snapshot', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_restoreSnapshot
IMachine_removeCPUIDLeaf => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_removeCPUIDLeaf
IPerformanceMetric_getCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceMetric_getCount
IAppliance_interpret => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_interpret
IConsole_powerDown => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_powerDown
IMedium_unlockRead => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_unlockRead
IHost_createHostOnlyNetworkInterface => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_createHostOnlyNetworkInterface
IMachine_getIoBandwidthMax => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getIoBandwidthMax
IAudioAdapter_getEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_getEnabled
IMachine_setMemorySize => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'memorySize', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setMemorySize
IUSBDevice_getAddress => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getAddress
IDisplay_setVideoModeHint => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'width', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'height', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'bitsPerPixel', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'display', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IDisplay_setVideoModeHint
IConsole_getKeyboard => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getKeyboard
INetworkAdapter_setTraceFile => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'traceFile', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setTraceFile
IMedium_getSnapshotIds => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'machineId', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getSnapshotIds
IProgress_getCancelable => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getCancelable
IConsole_reset => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_reset
IVirtualBox_checkFirmwarePresent => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'firmwareType', type => 'vbox:FirmwareType', attr => {}),
      SOAP::Data->new(name => 'version', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_checkFirmwarePresent
IVirtualSystemDescription_addDescription => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'aType', type => 'vbox:VirtualSystemDescriptionType', attr => {}),
      SOAP::Data->new(name => 'aVBoxValue', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'aExtraConfigValue', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualSystemDescription_addDescription
INATEngine_setDnsProxy => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'dnsProxy', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end INATEngine_setDnsProxy
IStorageController_setPortCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'portCount', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IStorageController_setPortCount
IProgress_getCanceled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getCanceled
IMachine_getMediumAttachment => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IMachine_getMediumAttachment
IMachine_getAccelerate3DEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getAccelerate3DEnabled
IMachine_getSessionState => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getSessionState
IMedium_getLastAccessError => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getLastAccessError
IMachine_setGuestPropertyNotificationPatterns => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'guestPropertyNotificationPatterns', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setGuestPropertyNotificationPatterns
INetworkAdapter_getAttachmentType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getAttachmentType
IMouse_putMouseEventAbsolute => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'x', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'y', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'dz', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'dw', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'buttonState', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IMouse_putMouseEventAbsolute
ISystemProperties_setDefaultHardDiskFolder => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'defaultHardDiskFolder', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setDefaultHardDiskFolder
IMedium_mergeTo => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'target', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_mergeTo
IBIOSSettings_setLogoDisplayTime => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'logoDisplayTime', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setLogoDisplayTime
IGuest_getProcessStatus => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'pid', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IGuest_getProcessStatus
INetworkAdapter_getNatDriver => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getNatDriver
IMedium_lockWrite => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_lockWrite
IGuest_getSupportsGraphics => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getSupportsGraphics
IManagedObjectRef_release => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IManagedObjectRef_release
INetworkAdapter_setEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setEnabled
IMachine_setAccelerate3DEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'accelerate3DEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setAccelerate3DEnabled
IConsole_adoptSavedState => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'savedStateFile', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_adoptSavedState
IMediumFormat_getName => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumFormat_getName
IVirtualBox_getRevision => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getRevision
IMachine_setIoCacheSize => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'ioCacheSize', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setIoCacheSize
IUSBDeviceFilter_setProductId => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'productId', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setProductId
IMachine_getTeleporterAddress => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getTeleporterAddress
IPerformanceCollector_queryMetricsData => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'metricNames', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'objects', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceCollector_queryMetricsData
IPerformanceCollector_getMetrics => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'metricNames', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'objects', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceCollector_getMetrics
IPerformanceCollector_setupMetrics => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'metricNames', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'objects', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'period', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'count', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IPerformanceCollector_setupMetrics
IHostNetworkInterface_getIPV6Address => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getIPV6Address
IPerformanceMetric_getMinimumValue => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceMetric_getMinimumValue
IHost_getProcessorCPUIDLeaf => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpuId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'leaf', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'subLeaf', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IHost_getProcessorCPUIDLeaf
IConsole_sleepButton => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_sleepButton
IMouse_putMouseEvent => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'dx', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'dy', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'dz', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'dw', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'buttonState', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IMouse_putMouseEvent
IMachine_addStorageController => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'connectionType', type => 'vbox:StorageBus', attr => {}),
    ], # end parameters
  }, # end IMachine_addStorageController
IMachine_removeAllCPUIDLeaves => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_removeAllCPUIDLeaves
ISystemProperties_getFreeDiskSpacePercentWarning => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getFreeDiskSpacePercentWarning
IConsole_findUSBDeviceById => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_findUSBDeviceById
ISystemProperties_setLogHistoryCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'LogHistoryCount', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setLogHistoryCount
IHost_getUSBDevices => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getUSBDevices
IHost_findUSBDeviceById => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_findUSBDeviceById
IMachine_canShowConsoleWindow => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_canShowConsoleWindow
IUSBDeviceFilter_getProduct => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getProduct
IMedium_cloneTo => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'target', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'variant', type => 'vbox:MediumVariant', attr => {}),
      SOAP::Data->new(name => 'parent', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_cloneTo
ISnapshot_getMachine => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_getMachine
IGuest_setCredentials => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'userName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'password', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'domain', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'allowInteractiveLogon', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IGuest_setCredentials
IParallelPort_getSlot => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IParallelPort_getSlot
IMachine_saveSettings => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_saveSettings
IMachine_setCPUProperty => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'property', type => 'vbox:CPUPropertyType', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setCPUProperty
ISystemProperties_getMaxGuestCPUCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxGuestCPUCount
IDHCPServer_setEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_setEnabled
INATEngine_setNetworkSettings => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'mtu', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'sockSnd', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'sockRcv', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'TcpWndSnd', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'TcpWndRcv', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end INATEngine_setNetworkSettings
IUSBDeviceFilter_getRemote => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getRemote
INetworkAdapter_setMACAddress => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'MACAddress', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setMACAddress
IDHCPServer_getIPAddress => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_getIPAddress
INetworkAdapter_getTraceFile => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getTraceFile
IConsole_forgetSavedState => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'remove', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IConsole_forgetSavedState
IMachine_setHWVirtExProperty => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'property', type => 'vbox:HWVirtExPropertyType', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setHWVirtExProperty
ISnapshot_getOnline => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_getOnline
IDHCPServer_getUpperIP => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_getUpperIP
IVRDPServer_getEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDPServer_getEnabled
IMachine_hotPlugCPU => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpu', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_hotPlugCPU
IStorageController_getIDEEmulationPort => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'devicePosition', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IStorageController_getIDEEmulationPort
ISnapshot_getId => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_getId
IConsole_attachUSBDevice => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_attachUSBDevice
ISnapshot_getName => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_getName
IVirtualBox_getGuestOSType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getGuestOSType
IParallelPort_setEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IParallelPort_setEnabled
IAudioAdapter_getAudioDriver => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_getAudioDriver
IConsole_getState => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getState
IMachine_setSnapshotFolder => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'snapshotFolder', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setSnapshotFolder
IMachine_detachDevice => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IMachine_detachDevice
ISystemProperties_setDefaultHardDiskFormat => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'defaultHardDiskFormat', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setDefaultHardDiskFormat
INATEngine_setTftpPrefix => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'tftpPrefix', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_setTftpPrefix
IConsole_deleteSnapshot => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_deleteSnapshot
IKeyboard_putScancode => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'scancode', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IKeyboard_putScancode
IVirtualBox_findFloppyImage => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'location', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_findFloppyImage
IStorageController_setIDEEmulationPort => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'devicePosition', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'portNumber', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IStorageController_setIDEEmulationPort
IMachine_getCPUHotPlugEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getCPUHotPlugEnabled
ISnapshot_getParent => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_getParent
ISystemProperties_getMinGuestCPUCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMinGuestCPUCount
IMachine_setMonitorCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'monitorCount', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setMonitorCount
ISerialPort_getServer => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISerialPort_getServer
IMachine_getCurrentStateModified => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getCurrentStateModified
IProgress_getErrorInfo => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getErrorInfo
IHostNetworkInterface_getNetworkName => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getNetworkName
INetworkAdapter_setCableConnected => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cableConnected', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setCableConnected
IMachine_getExtraData => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'key', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getExtraData
IVirtualBox_openSession => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'session', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'machineId', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_openSession
ISystemProperties_getFreeDiskSpaceWarning => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getFreeDiskSpaceWarning
IPerformanceMetric_getObject => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceMetric_getObject
INetworkAdapter_setNATNetwork => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'NATNetwork', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setNATNetwork
IAppliance_getPath => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_getPath
IAppliance_getWarnings => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_getWarnings
INATEngine_removeRedirect => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_removeRedirect
ISystemProperties_getMaxDevicesPerPortForStorageBus => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'bus', type => 'vbox:StorageBus', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxDevicesPerPortForStorageBus
IAudioAdapter_setAudioController => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'audioController', type => 'vbox:AudioControllerType', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_setAudioController
IHostNetworkInterface_getIPAddress => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getIPAddress
IMachine_readSavedThumbnailToArray => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'BGR', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_readSavedThumbnailToArray
IUSBDeviceFilter_setName => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setName
IVirtualBox_getPerformanceCollector => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getPerformanceCollector
IMachine_setFirmwareType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'firmwareType', type => 'vbox:FirmwareType', attr => {}),
    ], # end parameters
  }, # end IMachine_setFirmwareType
IProgress_getPercent => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getPercent
INATEngine_addRedirect => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'proto', type => 'vbox:NATProtocol', attr => {}),
      SOAP::Data->new(name => 'hostIp', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostPort', type => 'xsd:unsignedShort', attr => {}),
      SOAP::Data->new(name => 'guestIp', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'guestPort', type => 'xsd:unsignedShort', attr => {}),
    ], # end parameters
  }, # end INATEngine_addRedirect
IVirtualBox_getFloppyImages => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getFloppyImages
IWebsessionManager_logoff => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => 'refIVirtualBox', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IWebsessionManager_logoff
ISystemProperties_getDefaultAudioDriver => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getDefaultAudioDriver
INATEngine_setTftpBootFile => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'tftpBootFile', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_setTftpBootFile
IProgress_getOperationPercent => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getOperationPercent
INetworkAdapter_getMACAddress => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getMACAddress
IVirtualBox_getHardDisks => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getHardDisks
IUSBDeviceFilter_getVendorId => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getVendorId
IMachine_mountMedium => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'medium', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'force', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_mountMedium
IMedium_getParent => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getParent
IHostNetworkInterface_getId => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getId
IAudioAdapter_getAudioController => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_getAudioController
IVFSExplorer_getPath => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVFSExplorer_getPath
INATEngine_setDnsUseHostResolver => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'dnsUseHostResolver', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end INATEngine_setDnsUseHostResolver
IDHCPServer_stop => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_stop
IMachine_getSnapshot => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getSnapshot
INetworkAdapter_getVDENetwork => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getVDENetwork
ISystemProperties_setFreeDiskSpaceWarning => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'freeDiskSpaceWarning', type => 'xsd:unsignedLong', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setFreeDiskSpaceWarning
IHost_removeHostOnlyNetworkInterface => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_removeHostOnlyNetworkInterface
IVirtualBox_removeDHCPServer => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'server', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_removeDHCPServer
IParallelPort_getPath => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IParallelPort_getPath
IBIOSSettings_getLogoFadeIn => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getLogoFadeIn
IBIOSSettings_getACPIEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getACPIEnabled
IBIOSSettings_setLogoImagePath => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'logoImagePath', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setLogoImagePath
IMachine_setExtraData => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'key', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setExtraData
IMediumFormat_getCapabilities => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumFormat_getCapabilities
IMachine_getAccessible => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getAccessible
INetworkAdapter_getSlot => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getSlot
IMedium_getDeviceType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getDeviceType
ISystemProperties_getMaxGuestVRAM => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxGuestVRAM
IMachine_setGuestPropertyValue => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'property', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setGuestPropertyValue
IMedium_getChildren => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getChildren
IVirtualBox_openRemoteSession => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'session', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'machineId', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'type', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'environment', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_openRemoteSession
IBIOSSettings_getBootMenuMode => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getBootMenuMode
INetworkAdapter_getInternalNetwork => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getInternalNetwork
IGuest_setPageFusionEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'pageFusionEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IGuest_setPageFusionEnabled
INetworkAdapter_getAdapterType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getAdapterType
IMedium_getSize => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getSize
IAppliance_getDisks => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_getDisks
IMedium_getDescription => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getDescription
IVirtualBoxErrorInfo_getResultCode => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBoxErrorInfo_getResultCode
INetworkAdapter_setHostInterface => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostInterface', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setHostInterface
ISystemProperties_getMinGuestRAM => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMinGuestRAM
INATEngine_getHostIP => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getHostIP
INetworkAdapter_getTraceEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getTraceEnabled
IGuest_getSupportsSeamless => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getSupportsSeamless
ISystemProperties_getFreeDiskSpaceError => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getFreeDiskSpaceError
IUSBDevice_getRemote => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getRemote
INetworkAdapter_getHostInterface => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getHostInterface
IPerformanceMetric_getMetricName => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceMetric_getMetricName
IMachine_getSettingsModified => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getSettingsModified
IMachine_getGuestPropertyTimestamp => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'property', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getGuestPropertyTimestamp
IUSBDeviceFilter_setRemote => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'remote', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setRemote
ISerialPort_setEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end ISerialPort_setEnabled
IAudioAdapter_setEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_setEnabled
IVirtualBox_getDVDImages => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getDVDImages
IHost_getMemoryAvailable => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getMemoryAvailable
IMedium_getName => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getName
IMachine_getBootOrder => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'position', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_getBootOrder
IMachine_export => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'aAppliance', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_export
IKeyboard_putScancodes => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'scancodes', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IKeyboard_putScancodes
IMedium_getHostDrive => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getHostDrive
IMachine_setCPUCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'CPUCount', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setCPUCount
IUSBDevice_getVendorId => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getVendorId
IAppliance_getVirtualSystemDescriptions => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_getVirtualSystemDescriptions
IDisplay_takeScreenShotToArray => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'width', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'height', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IDisplay_takeScreenShotToArray
IMachine_setDescription => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'description', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setDescription
IMachine_setAccelerate2DVideoEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'accelerate2DVideoEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setAccelerate2DVideoEnabled
INATEngine_setTftpNextServer => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'tftpNextServer', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_setTftpNextServer
IMachine_getPointingHidType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getPointingHidType
IUSBController_removeDeviceFilter => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'position', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IUSBController_removeDeviceFilter
ISystemProperties_setWebServiceAuthLibrary => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'webServiceAuthLibrary', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setWebServiceAuthLibrary
IDHCPServer_start => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'networkName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'trunkName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'trunkType', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_start
IProgress_cancel => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_cancel
IUSBController_createDeviceFilter => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBController_createDeviceFilter
IProgress_getDescription => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getDescription
IMachine_setVRAMSize => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'VRAMSize', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setVRAMSize
IVirtualBox_createSharedFolder => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostPath', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'writable', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_createSharedFolder
ISystemProperties_getMaxInstancesOfStorageBus => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'bus', type => 'vbox:StorageBus', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxInstancesOfStorageBus
IPerformanceMetric_getPeriod => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceMetric_getPeriod
IMachine_getUSBController => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getUSBController
IUSBDeviceFilter_getProductId => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getProductId
IMedium_setProperty => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_setProperty
IMedium_setDescription => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'description', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_setDescription
IMachine_setIoBandwidthMax => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'ioBandwidthMax', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setIoBandwidthMax
IUSBDeviceFilter_getRevision => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getRevision
IUSBDevice_getVersion => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getVersion
ISystemProperties_setRemoteDisplayAuthLibrary => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'remoteDisplayAuthLibrary', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setRemoteDisplayAuthLibrary
IBIOSSettings_getLogoFadeOut => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getLogoFadeOut
IBIOSSettings_setLogoFadeIn => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'logoFadeIn', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setLogoFadeIn
IPerformanceMetric_getUnit => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceMetric_getUnit
ISystemProperties_getMinPortCountForStorageBus => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'bus', type => 'vbox:StorageBus', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMinPortCountForStorageBus
IMachine_getMonitorCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getMonitorCount
IProgress_waitForCompletion => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'timeout', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IProgress_waitForCompletion
IConsole_teleport => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostname', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'tcpport', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'password', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'maxDowntime', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IConsole_teleport
IVirtualBox_openExistingSession => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'session', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'machineId', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_openExistingSession
IVirtualBox_createMachine => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'osTypeId', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'baseFolder', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'override', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_createMachine
IMachine_setKeyboardHidType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'keyboardHidType', type => 'vbox:KeyboardHidType', attr => {}),
    ], # end parameters
  }, # end IMachine_setKeyboardHidType
IMachine_getIoCacheEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getIoCacheEnabled
ISerialPort_setHostMode => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostMode', type => 'vbox:PortMode', attr => {}),
    ], # end parameters
  }, # end ISerialPort_setHostMode
IUSBDeviceFilter_getManufacturer => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getManufacturer
IHostNetworkInterface_enableStaticIpConfigV6 => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IPV6Address', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IPV6NetworkMaskPrefixLength', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_enableStaticIpConfigV6
IParallelPort_setIOBase => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IOBase', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IParallelPort_setIOBase
IConsole_findUSBDeviceByAddress => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_findUSBDeviceByAddress
IMachine_setHardwareVersion => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'HardwareVersion', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setHardwareVersion
ISystemProperties_getMediumFormats => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMediumFormats
IVRDPServer_setEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IVRDPServer_setEnabled
IUSBDevice_getRevision => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getRevision
IVirtualBox_getHost => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getHost
IDisplay_invalidateAndUpdate => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDisplay_invalidateAndUpdate
IVirtualSystemDescription_setFinalValues => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'aEnabled', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'aVBoxValues', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'aExtraConfigValues', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualSystemDescription_setFinalValues
IUSBDevice_getId => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getId
IMachine_getVRAMSize => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getVRAMSize
IConsole_getSharedFolders => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getSharedFolders
IMachine_getId => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getId
ISystemProperties_getMaxPortCountForStorageBus => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'bus', type => 'vbox:StorageBus', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxPortCountForStorageBus
IGuest_getAdditionsActive => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getAdditionsActive
IMedium_createBaseStorage => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'logicalSize', type => 'xsd:unsignedLong', attr => {}),
      SOAP::Data->new(name => 'variant', type => 'vbox:MediumVariant', attr => {}),
    ], # end parameters
  }, # end IMedium_createBaseStorage
INATEngine_getRedirects => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getRedirects
IMedium_getProperty => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getProperty
IUSBDevice_getProductId => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getProductId
IVFSExplorer_update => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVFSExplorer_update
ISnapshot_getTimeStamp => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_getTimeStamp
IMachine_getBIOSSettings => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getBIOSSettings
IHost_getFloppyDrives => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getFloppyDrives
IGuest_setMemoryBalloonSize => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'memoryBalloonSize', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IGuest_setMemoryBalloonSize
IMedium_getMediumFormat => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getMediumFormat
ISerialPort_getPath => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISerialPort_getPath
INATEngine_setNetwork => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'network', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_setNetwork
ISystemProperties_getMaxBootPosition => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxBootPosition
IUSBController_getDeviceFilters => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBController_getDeviceFilters
INATEngine_getAliasMode => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getAliasMode
IDisplay_getScreenResolution => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IDisplay_getScreenResolution
IMachine_setTeleporterPassword => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'teleporterPassword', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setTeleporterPassword
IVirtualSystemDescription_getCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualSystemDescription_getCount
IMachine_querySavedThumbnailSize => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_querySavedThumbnailSize
IMachine_getClipboardMode => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getClipboardMode
IConsole_pause => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_pause
IMachine_setName => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setName
ISerialPort_setIOBase => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IOBase', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end ISerialPort_setIOBase
IMachine_getState => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getState
ISerialPort_getSlot => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISerialPort_getSlot
IHostNetworkInterface_getIPV6Supported => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getIPV6Supported
IMachine_getCurrentSnapshot => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getCurrentSnapshot
IVRDPServer_getVideoChannelQuality => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDPServer_getVideoChannelQuality
IMediumFormat_describeProperties => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumFormat_describeProperties
IMachine_getTeleporterPort => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getTeleporterPort
IVirtualBox_getFloppyImage => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getFloppyImage
IMachine_getCPUCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getCPUCount
IConsole_getUSBDevices => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getUSBDevices
ISystemProperties_getMaxVDISize => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxVDISize
IStorageController_getMinPortCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getMinPortCount
IHost_getUSBDeviceFilters => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getUSBDeviceFilters
IMachine_attachDevice => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:DeviceType', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_attachDevice
IParallelPort_setIRQ => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IRQ', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IParallelPort_setIRQ
IVRDPServer_setVideoChannel => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'videoChannel', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IVRDPServer_setVideoChannel
IUSBDeviceFilter_setRevision => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'revision', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setRevision
IMachine_getPageFusionEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getPageFusionEnabled
IBIOSSettings_getLogoImagePath => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getLogoImagePath
IMachine_getSerialPort => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'slot', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_getSerialPort
IDHCPServer_getEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_getEnabled
IBIOSSettings_setIOAPICEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IOAPICEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setIOAPICEnabled
ISession_getMachine => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISession_getMachine
IVirtualSystemDescription_getDescriptionByType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'aType', type => 'vbox:VirtualSystemDescriptionType', attr => {}),
    ], # end parameters
  }, # end IVirtualSystemDescription_getDescriptionByType
IBIOSSettings_setTimeOffset => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'timeOffset', type => 'xsd:long', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setTimeOffset
IVRDPServer_getPorts => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDPServer_getPorts
ISerialPort_setPath => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISerialPort_setPath
INATEngine_getNetwork => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getNetwork
IMachine_getMemoryBalloonSize => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getMemoryBalloonSize
IConsole_powerUpPaused => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_powerUpPaused
IUSBDeviceFilter_setManufacturer => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'manufacturer', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setManufacturer
IVFSExplorer_entryList => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVFSExplorer_entryList
IHostNetworkInterface_dhcpRediscover => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_dhcpRediscover
IMachine_getHardwareUUID => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getHardwareUUID
IVRDPServer_getAllowMultiConnection => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDPServer_getAllowMultiConnection
IMachine_getTeleporterEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getTeleporterEnabled
IMachine_getAccelerate2DVideoEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getAccelerate2DVideoEnabled
IVirtualBox_getGuestOSTypes => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getGuestOSTypes
IMachine_setTeleporterEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'teleporterEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setTeleporterEnabled
IDisplay_resizeCompleted => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IDisplay_resizeCompleted
IAppliance_read => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'file', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_read
IMachine_getNetworkAdapter => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'slot', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_getNetworkAdapter
IMachine_getStorageControllerByInstance => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'instance', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_getStorageControllerByInstance
IHost_createUSBDeviceFilter => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_createUSBDeviceFilter
IVFSExplorer_exists => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'aNames', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVFSExplorer_exists
INATEngine_getTftpNextServer => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getTftpNextServer
IHost_getNetworkInterfaces => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getNetworkInterfaces
IMachine_setCPUHotPlugEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'CPUHotPlugEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setCPUHotPlugEnabled
IStorageController_getControllerType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getControllerType
INetworkAdapter_getLineSpeed => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getLineSpeed
IConsole_getMouse => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getMouse
IMachine_getMedium => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IMachine_getMedium
IGuest_getPageFusionEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getPageFusionEnabled
IMachine_setHardwareUUID => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hardwareUUID', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setHardwareUUID
IUSBController_getUSBStandard => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBController_getUSBStandard
IHost_findHostNetworkInterfacesOfType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:HostNetworkInterfaceType', attr => {}),
    ], # end parameters
  }, # end IHost_findHostNetworkInterfacesOfType
IMachine_showConsoleWindow => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_showConsoleWindow
IMachine_getGuestPropertyValue => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'property', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getGuestPropertyValue
IConsole_detachUSBDevice => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_detachUSBDevice
IMedium_createDiffStorage => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'target', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'variant', type => 'vbox:MediumVariant', attr => {}),
    ], # end parameters
  }, # end IMedium_createDiffStorage
IMachine_getAccessError => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getAccessError
IHostNetworkInterface_getHardwareAddress => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getHardwareAddress
IHost_getOperatingSystem => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getOperatingSystem
IMachine_setMemoryBalloonSize => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'memoryBalloonSize', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setMemoryBalloonSize
IPerformanceCollector_getMetricNames => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceCollector_getMetricNames
IMachine_getLastStateChange => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getLastStateChange
IMedium_getBase => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getBase
IMedium_refreshState => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_refreshState
IStorageController_getMaxDevicesPerPortCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getMaxDevicesPerPortCount
IMedium_getId => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getId
ISystemProperties_getParallelPortCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getParallelPortCount
IVRDPServer_setPorts => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'ports', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDPServer_setPorts
INetworkAdapter_getEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getEnabled
ISession_getConsole => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISession_getConsole
IMedium_getLogicalSize => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getLogicalSize
IWebsessionManager_logon => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => 'username', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'password', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IWebsessionManager_logon
IGuest_internalGetStatistics => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_internalGetStatistics
IParallelPort_getEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IParallelPort_getEnabled
IMedium_getType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getType
IParallelPort_getIRQ => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IParallelPort_getIRQ
IVirtualBox_findDHCPServerByNetworkName => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_findDHCPServerByNetworkName
IVirtualBox_openHardDisk => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'location', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'accessMode', type => 'vbox:AccessMode', attr => {}),
      SOAP::Data->new(name => 'setImageId', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'imageId', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'setParentId', type => 'xsd:boolean', attr => {}),
      SOAP::Data->new(name => 'parentId', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_openHardDisk
IMachine_getTeleporterPassword => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getTeleporterPassword
IMedium_compact => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_compact
IUSBDeviceFilter_getName => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getName
IMachine_getGuestProperty => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getGuestProperty
IConsole_resume => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_resume
IMedium_lockRead => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_lockRead
IMachine_setRTCUseUTC => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'RTCUseUTC', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setRTCUseUTC
INATEngine_getNetworkSettings => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getNetworkSettings
IVirtualBox_registerMachine => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'machine', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_registerMachine
IHost_getDVDDrives => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getDVDDrives
IMachine_getFirmwareType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getFirmwareType
IParallelPort_getIOBase => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IParallelPort_getIOBase
IMachine_getStorageControllers => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getStorageControllers
IMedium_deleteStorage => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_deleteStorage
IMedium_setLocation => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'location', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_setLocation
INetworkAdapter_attachToVDE => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_attachToVDE
IVRDPServer_setAuthTimeout => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'authTimeout', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IVRDPServer_setAuthTimeout
IVRDPServer_getAuthTimeout => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDPServer_getAuthTimeout
IBIOSSettings_setACPIEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'ACPIEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setACPIEnabled
IVFSExplorer_cd => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'aDir', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVFSExplorer_cd
ISnapshot_setDescription => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'description', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_setDescription
IUSBDevice_getPort => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getPort
IProgress_getOperationDescription => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getOperationDescription
IVRDPServer_setNetAddress => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'netAddress', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDPServer_setNetAddress
IUSBDevice_getProduct => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getProduct
ISystemProperties_getMaxGuestRAM => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getMaxGuestRAM
IHost_removeUSBDeviceFilter => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'position', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IHost_removeUSBDeviceFilter
IMachine_setPageFusionEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'PageFusionEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setPageFusionEnabled
IMachine_getSnapshotFolder => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getSnapshotFolder
IDHCPServer_getNetworkName => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_getNetworkName
IBIOSSettings_getLogoDisplayTime => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getLogoDisplayTime
IHostNetworkInterface_enableStaticIpConfig => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IPAddress', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'networkMask', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_enableStaticIpConfig
IVRDPServer_getVideoChannel => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVRDPServer_getVideoChannel
IVirtualBox_getPackageType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getPackageType
IUSBDeviceFilter_setActive => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'active', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setActive
IVirtualBox_openMachine => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'settingsFile', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_openMachine
IVirtualBox_getExtraDataKeys => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getExtraDataKeys
IHost_findHostFloppyDrive => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_findHostFloppyDrive
IHostNetworkInterface_getInterfaceType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getInterfaceType
IHost_insertUSBDeviceFilter => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'position', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'filter', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_insertUSBDeviceFilter
IBIOSSettings_setBootMenuMode => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'bootMenuMode', type => 'vbox:BIOSBootMenuMode', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setBootMenuMode
IMachine_getCPUProperty => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'property', type => 'vbox:CPUPropertyType', attr => {}),
    ], # end parameters
  }, # end IMachine_getCPUProperty
ISerialPort_getIRQ => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISerialPort_getIRQ
IConsole_createSharedFolder => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hostPath', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'writable', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IConsole_createSharedFolder
IMachine_hotUnplugCPU => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpu', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_hotUnplugCPU
IProgress_getInitiator => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getInitiator
IMachine_getVRDPServer => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getVRDPServer
IConsole_removeSharedFolder => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_removeSharedFolder
IStorageController_getUseHostIOCache => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getUseHostIOCache
IVirtualBox_createLegacyMachine => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'osTypeId', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'settingsFile', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_createLegacyMachine
IDHCPServer_setConfiguration => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'IPAddress', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'networkMask', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'FromIPAddress', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'ToIPAddress', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_setConfiguration
IGuest_getMemoryBalloonSize => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getMemoryBalloonSize
IAppliance_createVFSExplorer => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'aUri', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_createVFSExplorer
ISystemProperties_getRemoteDisplayAuthLibrary => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getRemoteDisplayAuthLibrary
INetworkAdapter_setInternalNetwork => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'internalNetwork', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setInternalNetwork
IMachine_setIoCacheEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'ioCacheEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setIoCacheEnabled
ISystemProperties_getSerialPortCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getSerialPortCount
ISystemProperties_getDefaultMachineFolder => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getDefaultMachineFolder
IMachine_setTeleporterAddress => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'teleporterAddress', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setTeleporterAddress
INetworkAdapter_getNATNetwork => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getNATNetwork
IManagedObjectRef_getInterfaceName => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IManagedObjectRef_getInterfaceName
IPerformanceCollector_disableMetrics => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'metricNames', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'objects', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceCollector_disableMetrics
IHostNetworkInterface_getMediumType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getMediumType
IConsole_getRemoteDisplayInfo => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getRemoteDisplayInfo
IHost_findUSBDeviceByAddress => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_findUSBDeviceByAddress
IVirtualBox_removeSharedFolder => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_removeSharedFolder
IConsole_getPowerButtonHandled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getPowerButtonHandled
ISerialPort_getHostMode => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISerialPort_getHostMode
IBIOSSettings_setPXEDebugEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'PXEDebugEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_setPXEDebugEnabled
IVirtualBox_getSharedFolders => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getSharedFolders
IVirtualBox_waitForPropertyChange => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'what', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'timeout', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_waitForPropertyChange
IVirtualBox_getMachine => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getMachine
IMachine_deleteSettings => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_deleteSettings
IVirtualSystemDescription_getValuesByType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'aType', type => 'vbox:VirtualSystemDescriptionType', attr => {}),
      SOAP::Data->new(name => 'aWhich', type => 'vbox:VirtualSystemDescriptionValueType', attr => {}),
    ], # end parameters
  }, # end IVirtualSystemDescription_getValuesByType
IVRDPServer_setVideoChannelQuality => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'videoChannelQuality', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IVRDPServer_setVideoChannelQuality
IVirtualBox_openDVDImage => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'location', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_openDVDImage
IConsole_getDeviceActivity => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'type', type => 'vbox:DeviceType', attr => {}),
    ], # end parameters
  }, # end IConsole_getDeviceActivity
IMedium_setProperties => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'names', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'values', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_setProperties
ISystemProperties_getLogHistoryCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getLogHistoryCount
ISerialPort_getEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISerialPort_getEnabled
IConsole_powerButton => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_powerButton
IHost_getMemorySize => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getMemorySize
ISerialPort_getIOBase => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISerialPort_getIOBase
IVFSExplorer_getType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVFSExplorer_getType
INATEngine_getTftpPrefix => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getTftpPrefix
IUSBDeviceFilter_setProduct => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'product', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setProduct
IProgress_setTimeout => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'timeout', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IProgress_setTimeout
IMedium_getMachineIds => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getMachineIds
IConsole_getMachine => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getMachine
IDHCPServer_getLowerIP => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_getLowerIP
IStorageController_setUseHostIOCache => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'useHostIOCache', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IStorageController_setUseHostIOCache
IVirtualBox_unregisterMachine => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_unregisterMachine
INetworkAdapter_setBootPriority => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'bootPriority', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setBootPriority
IMachine_getMediumAttachments => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getMediumAttachments
IHost_getProcessorCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getProcessorCount
INetworkAdapter_attachToNAT => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_attachToNAT
IMachine_setHpetEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'hpetEnabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_setHpetEnabled
IGuest_setStatisticsUpdateInterval => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'statisticsUpdateInterval', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IGuest_setStatisticsUpdateInterval
IVirtualBox_findDVDImage => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'location', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_findDVDImage
INATEngine_setAliasMode => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'aliasMode', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end INATEngine_setAliasMode
IMachine_setClipboardMode => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'clipboardMode', type => 'vbox:ClipboardMode', attr => {}),
    ], # end parameters
  }, # end IMachine_setClipboardMode
IConsole_powerUp => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_powerUp
IMachine_getGuestPropertyNotificationPatterns => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getGuestPropertyNotificationPatterns
IUSBDevice_getManufacturer => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getManufacturer
IMachine_readLog => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'idx', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'offset', type => 'xsd:unsignedLong', attr => {}),
      SOAP::Data->new(name => 'size', type => 'xsd:unsignedLong', attr => {}),
    ], # end parameters
  }, # end IMachine_readLog
IMachine_getHpetEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getHpetEnabled
IHost_findHostNetworkInterfaceById => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_findHostNetworkInterfaceById
IUSBDevice_getSerialNumber => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getSerialNumber
IHost_getProcessorSpeed => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpuId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IHost_getProcessorSpeed
IStorageController_setControllerType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerType', type => 'vbox:StorageControllerType', attr => {}),
    ], # end parameters
  }, # end IStorageController_setControllerType
ISnapshot_getDescription => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISnapshot_getDescription
INetworkAdapter_getBootPriority => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_getBootPriority
IDHCPServer_getNetworkMask => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IDHCPServer_getNetworkMask
IVirtualBox_findHardDisk => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'location', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_findHardDisk
IMedium_setAutoReset => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'autoReset', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMedium_setAutoReset
ISession_getType => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISession_getType
IUSBController_getEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBController_getEnabled
IProgress_setNextOperation => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'nextOperationDescription', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'nextOperationsWeight', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IProgress_setNextOperation
IVRDPServer_setAllowMultiConnection => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'allowMultiConnection', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IVRDPServer_setAllowMultiConnection
IHostUSBDeviceFilter_setAction => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'action', type => 'vbox:USBDeviceFilterAction', attr => {}),
    ], # end parameters
  }, # end IHostUSBDeviceFilter_setAction
IMedium_unlockWrite => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_unlockWrite
IUSBDeviceFilter_setPort => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'port', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setPort
IVirtualBox_getVersion => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getVersion
IUSBDevice_getPortVersion => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDevice_getPortVersion
IUSBController_getEnabledEhci => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBController_getEnabledEhci
INetworkAdapter_attachToHostOnlyInterface => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_attachToHostOnlyInterface
IUSBDeviceFilter_getPort => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getPort
IMachine_getMediumAttachmentsOfController => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getMediumAttachmentsOfController
IConsole_saveState => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_saveState
ISystemProperties_setFreeDiskSpacePercentError => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'freeDiskSpacePercentError', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setFreeDiskSpacePercentError
IMachine_setGuestProperty => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'property', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'value', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setGuestProperty
IVirtualBox_findMachine => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_findMachine
IMachine_passthroughDevice => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'controllerPort', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'device', type => 'xsd:int', attr => {}),
      SOAP::Data->new(name => 'passthrough', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IMachine_passthroughDevice
IVirtualBox_getProgressOperations => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getProgressOperations
IConsole_getDisplay => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getDisplay
IAppliance_write => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'format', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'path', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IAppliance_write
IMachine_removeStorageController => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_removeStorageController
IHost_getProcessorDescription => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'cpuId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IHost_getProcessorDescription
IMachine_getDescription => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getDescription
IMachine_setTeleporterPort => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'teleporterPort', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_setTeleporterPort
ISystemProperties_setDefaultMachineFolder => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'defaultMachineFolder', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setDefaultMachineFolder
IHost_getProcessorCoreCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getProcessorCoreCount
IVirtualSystemDescription_getDescription => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualSystemDescription_getDescription
IVirtualBox_getHomeFolder => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getHomeFolder
IAudioAdapter_setAudioDriver => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'audioDriver', type => 'vbox:AudioDriverType', attr => {}),
    ], # end parameters
  }, # end IAudioAdapter_setAudioDriver
IUSBDeviceFilter_getActive => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getActive
IHost_getUTCTime => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getUTCTime
IWebsessionManager_getSessionObject => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => 'refIVirtualBox', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IWebsessionManager_getSessionObject
IVirtualBoxErrorInfo_getNext => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBoxErrorInfo_getNext
IHostNetworkInterface_getDhcpEnabled => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getDhcpEnabled
IUSBDeviceFilter_setMaskedInterfaces => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'maskedInterfaces', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setMaskedInterfaces
IMachine_getMemorySize => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getMemorySize
IVFSExplorer_remove => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'aNames', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVFSExplorer_remove
IVRDPServer_setReuseSingleConnection => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'reuseSingleConnection', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IVRDPServer_setReuseSingleConnection
IUSBDeviceFilter_getSerialNumber => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getSerialNumber
IHost_getOSVersion => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getOSVersion
IMedium_getReadOnly => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getReadOnly
IUSBController_setEnabledEhci => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabledEhci', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IUSBController_setEnabledEhci
IUSBDeviceFilter_getMaskedInterfaces => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_getMaskedInterfaces
IMachine_setBootOrder => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'position', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'device', type => 'vbox:DeviceType', attr => {}),
    ], # end parameters
  }, # end IMachine_setBootOrder
IMachine_getAudioAdapter => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getAudioAdapter
IVirtualBoxErrorInfo_getText => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBoxErrorInfo_getText
IMedium_getLocation => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getLocation
IMachine_removeSharedFolder => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_removeSharedFolder
INATEngine_getDnsProxy => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INATEngine_getDnsProxy
IConsole_getGuest => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getGuest
IUSBDeviceFilter_setVendorId => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'vendorId', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setVendorId
IHost_findHostDVDDrive => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_findHostDVDDrive
IUSBDeviceFilter_setSerialNumber => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'serialNumber', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IUSBDeviceFilter_setSerialNumber
IProgress_getId => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getId
IHostNetworkInterface_getNetworkMask => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_getNetworkMask
IHostNetworkInterface_enableDynamicIpConfig => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostNetworkInterface_enableDynamicIpConfig
ISystemProperties_setFreeDiskSpacePercentWarning => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'freeDiskSpacePercentWarning', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_setFreeDiskSpacePercentWarning
IStorageController_setInstance => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'instance', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IStorageController_setInstance
IProgress_getOperationCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getOperationCount
IStorageController_getInstance => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getInstance
IGuest_getProcessOutput => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'pid', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'timeoutMS', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'size', type => 'xsd:unsignedLong', attr => {}),
    ], # end parameters
  }, # end IGuest_getProcessOutput
IMediumFormat_getId => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumFormat_getId
IMachine_getExtraDataKeys => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getExtraDataKeys
IBIOSSettings_getTimeOffset => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IBIOSSettings_getTimeOffset
INetworkAdapter_setVDENetwork => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'VDENetwork', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end INetworkAdapter_setVDENetwork
IMediumFormat_getFileExtensions => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMediumFormat_getFileExtensions
IMedium_close => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_close
IMachine_getParent => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getParent
IGuest_executeProcess => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'execName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'flags', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'arguments', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'environment', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'userName', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'password', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'timeoutMS', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IGuest_executeProcess
IGuest_getStatisticsUpdateInterval => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IGuest_getStatisticsUpdateInterval
IProgress_getTimeRemaining => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IProgress_getTimeRemaining
IVirtualBox_createAppliance => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_createAppliance
IHostUSBDeviceFilter_getAction => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostUSBDeviceFilter_getAction
IProgress_waitForOperationCompletion => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'operation', type => 'xsd:unsignedInt', attr => {}),
      SOAP::Data->new(name => 'timeout', type => 'xsd:int', attr => {}),
    ], # end parameters
  }, # end IProgress_waitForOperationCompletion
IMedium_getAutoReset => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMedium_getAutoReset
IPerformanceMetric_getDescription => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceMetric_getDescription
IPerformanceCollector_enableMetrics => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'metricNames', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'objects', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IPerformanceCollector_enableMetrics
IMouse_getNeedsHostCursor => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMouse_getNeedsHostCursor
IStorageController_getName => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getName
IMachine_getSharedFolders => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getSharedFolders
IStorageController_getPortCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IStorageController_getPortCount
IMachine_findSnapshot => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'name', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_findSnapshot
IMachine_readSavedScreenshotPNGToArray => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'screenId', type => 'xsd:unsignedInt', attr => {}),
    ], # end parameters
  }, # end IMachine_readSavedScreenshotPNGToArray
IDisplay_setSeamlessMode => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'enabled', type => 'xsd:boolean', attr => {}),
    ], # end parameters
  }, # end IDisplay_setSeamlessMode
IMachine_setOSTypeId => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'OSTypeId', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_setOSTypeId
ISystemProperties_getDefaultHardDiskFormat => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getDefaultHardDiskFormat
IMachine_getIoCacheSize => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getIoCacheSize
IVirtualBox_getHardDisk => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'id', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getHardDisk
IVirtualBox_getMachines => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBox_getMachines
IVirtualBoxErrorInfo_getInterfaceID => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IVirtualBoxErrorInfo_getInterfaceID
IHostUSBDevice_getState => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHostUSBDevice_getState
IConsole_getGuestEnteredACPIMode => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IConsole_getGuestEnteredACPIMode
IMachine_getHardwareVersion => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getHardwareVersion
ISystemProperties_getWebServiceAuthLibrary => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getWebServiceAuthLibrary
ISystemProperties_getDeviceTypesForStorageBus => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
      SOAP::Data->new(name => 'bus', type => 'vbox:StorageBus', attr => {}),
    ], # end parameters
  }, # end ISystemProperties_getDeviceTypesForStorageBus
IMachine_getSessionPid => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getSessionPid
IHost_getProcessorOnlineCount => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IHost_getProcessorOnlineCount
IMachine_getRTCUseUTC => {
    endpoint => 'http://localhost:18083/',
    soapaction => '',
    namespace => 'http://www.virtualbox.org/',
    parameters => [
      SOAP::Data->new(name => '_this', type => 'xsd:string', attr => {}),
    ], # end parameters
  }, # end IMachine_getRTCUseUTC
); # end my %methods

use SOAP::Lite;
use Exporter;
use Carp ();

use vars qw(@ISA $AUTOLOAD @EXPORT_OK %EXPORT_TAGS);
@ISA = qw(Exporter SOAP::Lite);
@EXPORT_OK = (keys %methods);
%EXPORT_TAGS = ('all' => [@EXPORT_OK]);

sub _call {
    my ($self, $method) = (shift, shift);
    my $name = UNIVERSAL::isa($method => 'SOAP::Data') ? $method->name : $method;
    my %method = %{$methods{$name}};
    $self->proxy($method{endpoint} || Carp::croak "No server address (proxy) specified")
        unless $self->proxy;
    my @templates = @{$method{parameters}};
    my @parameters = ();
    foreach my $param (@_) {
        if (@templates) {
            my $template = shift @templates;
            my ($prefix,$typename) = SOAP::Utils::splitqname($template->type);
            my $method = 'as_'.$typename;
            # TODO - if can('as_'.$typename) {...}
            my $result = $self->serializer->$method($param, $template->name, $template->type, $template->attr);
            push(@parameters, $template->value($result->[2]));
        }
        else {
            push(@parameters, $param);
        }
    }
    $self->endpoint($method{endpoint})
       ->ns($method{namespace})
       ->on_action(sub{qq!"$method{soapaction}"!});
  $self->serializer->register_ns("urn:vbox","interface");
  $self->serializer->register_ns("http://www.virtualbox.org/","vbox");
  $self->serializer->register_ns("http://schemas.xmlsoap.org/wsdl/soap/","soap");
    my $som = $self->SUPER::call($method => @parameters);
    if ($self->want_som) {
        return $som;
    }
    UNIVERSAL::isa($som => 'SOAP::SOM') ? wantarray ? $som->paramsall : $som->result : $som;
}

sub BEGIN {
    no strict 'refs';
    for my $method (qw(want_som)) {
        my $field = '_' . $method;
        *$method = sub {
            my $self = shift->new;
            @_ ? ($self->{$field} = shift, return $self) : return $self->{$field};
        }
    }
}
no strict 'refs';
for my $method (@EXPORT_OK) {
    my %method = %{$methods{$method}};
    *$method = sub {
        my $self = UNIVERSAL::isa($_[0] => __PACKAGE__)
            ? ref $_[0]
                ? shift # OBJECT
                # CLASS, either get self or create new and assign to self
                : (shift->self || __PACKAGE__->self(__PACKAGE__->new))
            # function call, either get self or create new and assign to self
            : (__PACKAGE__->self || __PACKAGE__->self(__PACKAGE__->new));
        $self->_call($method, @_);
    }
}

sub AUTOLOAD {
    my $method = substr($AUTOLOAD, rindex($AUTOLOAD, '::') + 2);
    return if $method eq 'DESTROY' || $method eq 'want_som';
    die "Unrecognized method '$method'. List of available method(s): @EXPORT_OK\n";
}

1;

